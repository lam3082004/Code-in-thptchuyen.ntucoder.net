// ADISTINCT
// B·ªùm l√† m·ªôt ch√†ng trai r·∫•t ƒëam m√™ nh·ªØng b√†i to√°n v·ªõi d√£y s·ªë. B·ªùm kh√¥ng th√≠ch nh·ªØng d√£y s·ªë c√≥
// hai ph·∫ßn t·ª≠ gi·ªëng nhau n·∫±m c·∫°nh nhau, v√† g·ªçi nh·ªØng d√£y s·ªë c√≥ t√≠nh ch·∫•t n√†y l√† d√£y x·∫•u. Ch√≠nh
// v√¨ th·∫ø, h√¥m nay B·ªùm ƒë·∫∑t ra b√†i to√°n nh∆∞ sau:
// Cho m·ªôt d√£y g·ªìm n s·ªë nguy√™n. ƒê·∫øm s·ªë d√£y s·ªë kh√°c nhau l√† ho√°n v·ªã c·ªßa d√£y s·ªë tr√™n, ƒë·ªìng th·ªùi
// kh√¥ng ph·∫£i l√† d√£y x·∫•u. Hai ho√°n v·ªã a v√† b ƒë∆∞·ª£c xem l√† kh√°c nhau n·∫øu t·ªìn t·∫°i √≠t nh·∫•t m·ªôt v·ªã tr√≠ i
// sao cho ai 6= bi
// .
// V√¨ k·∫øt qu·∫£ b√†i to√°n c√≥ th·ªÉ r·∫•t l·ªõn, B·ªùm ch·ªâ mu·ªën t√¨m s·ªë l∆∞·ª£ng d√£y theo modulo 109 + 7. Tuy
// nhi√™n, B·ªùm ch∆∞a th·ªÉ gi·∫£i quy·∫øt ƒë∆∞·ª£c b√†i to√°n n√†y. L√† m·ªôt l·∫≠p tr√¨nh vi√™n t√†i nƒÉng, nh∆∞ng l·∫°i ƒëang
// c√¥ ƒë∆°n v√† r·∫£nh r·ªói v√¨ kh√¥ng c√≥ ai ƒëi ch∆°i gi√°ng sinh c√πng, b·∫°n c√≥ th·ªÉ gi√∫p B·ªùm kh√¥ng?
// D·ªØ li·ªáu
//  D√≤ng ƒë·∫ßu ti√™n ch·ª©a s·ªë nguy√™n d∆∞∆°ng n l√† s·ªë s·ªë trong d√£y (1  n  750).
//  D√≤ng th·ª© hai ch·ª©a n s·ªë nguy√™n d∆∞∆°ng a1; a2; :::; an mi√™u t·∫£ c√°c s·ªë trong d√£y (1  ai  n).
// K·∫øt qu·∫£
//  ƒê∆∞a ra m·ªôt s·ªë nguy√™n duy nh·∫•t l√† k·∫øt qu·∫£ b√†i to√°n theo modulo 109 + 7 tr√™n m·ªôt d√≤ng
#include <bits/stdc++.h>
#define fo(i, a, b) for (int i = (a); i <= (b); ++i)
#define __unique(V) (V).resize(unique((V).begin(), (V).end()) - (V).begin())
#define cntbit(X) __builtin_popcount((X))
#define bit(S, i) (((S) >> (i)) & 1)
#define PI acos(-1)
#define fi first
#define se second
#define LL long long
#define ii pair<int, int>
#define iii pair<int, ii>
#define eb emplace_back
#define TASK "adistinct"
using namespace std;
const int maxn = 752;
const int mod = 1e9 + 7;
int n, a[maxn], C[maxn][maxn];
int dp[2][maxn * maxn];
///--------------------------
void readf()
{
    cin >> n;
    for (int i = 1; i <= n; ++i)
    {
        int x;
        cin >> x;
        a[x]++;
    }
}
///--------------------------
void combi()
{
    for (int i = 0; i < maxn; ++i)
        for (int j = i; j < maxn; ++j)
            if (i == 0 || i == j)
                C[i][j] = 1;
            else
                C[i][j] = (C[i - 1][j - 1] + C[i][j - 1]) % mod;
}
///--------------------------
void solve()
{
    combi();
    int s = 0;
    int last = 0, cur = 0, pos;
    for (int i = 1; i <= n; ++i)
        if (a[i] > 0)
        {
            pos = i;
            dp[last][a[i] - 1] = 1;
            s += a[i];
            break;
        }
    for (int i = pos + 1; i <= n; ++i)
        if (a[i] > 0)
        {
            cur ^= 1;
            for (int c = 0; c <= s + a[i]; ++c)
                dp[cur][c] = 0;
            for (int t = 1; t <= min(a[i], s + 1); ++t)
                for (int x = 0; x < s; ++x)
                    for (int y = max(0, t + x - s - 1); y <= min(x, t); ++y)
                    {
                        int tmp = dp[last][x];
                        tmp = 1LL * tmp * C[y][x] % mod;
                        tmp = 1LL * tmp * C[t - y][s + 1 - x] % mod;
                        tmp = 1LL * tmp * C[t - 1][a[i] - 1] % mod;
                        int &rs = dp[cur][x - y + a[i] - t];
                        rs = (rs + tmp) % mod;
                    }
            s += a[i];
            last ^= 1;
        }
    cout << dp[cur][0] << '\n';
}
///--------------------------
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifdef TLH2203
    freopen(TASK ".inp", "r", stdin);
    freopen(TASK ".out", "w", stdout);
#endif // TLH2203
    readf();
    solve();
}
